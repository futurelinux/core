--- a/CMakeLists.txt	2020-03-03 12:07:50.430000000 +0100
+++ b/CMakeLists.txt	2020-03-03 12:16:06.400000000 +0100
@@ -162,7 +162,7 @@
   FIND_PACKAGE(wxWidgets REQUIRED base core aui xrc html xml adv gl qa)
 ELSE()
 # Unix needs also wxWidgets net library
-  FIND_PACKAGE(wxWidgets REQUIRED base core aui xrc html xml adv gl net qa)
+  FIND_PACKAGE(wxWidgets COMPONENTS base core aui xrc html xml adv gl net qa)
 ENDIF()
 
 # hugin requires wxwidgets 3.0 or above
@@ -170,7 +170,8 @@
   EXEC_PROGRAM(sh ARGS "${wxWidgets_CONFIG_EXECUTABLE} --version" OUTPUT_VARIABLE wxWidgets_VERSION)
   STRING(REGEX REPLACE "^([0-9]+\\.[0-9]+)\\..*" "\\1"  wxWidgets_VERSION ${wxWidgets_VERSION})
   IF(wxWidgets_VERSION VERSION_LESS "3.0")
-    MESSAGE(FATAL_ERROR "At least wxWidgets 3.0 is required")
+    SET(wxWidgets_FOUND FALSE)
+    MESSAGE("At least wxWidgets 3.0 is required")
   ENDIF()
   IF(wxWidgets_VERSION VERSION_GREATER "3.1.0")
     SET(USE_XDG_DIRS 1)
@@ -180,9 +181,13 @@
   # Ubuntu has 2 different devel packages, we need the GUI version
   EXEC_PROGRAM(sh ARGS "${wxWidgets_CONFIG_EXECUTABLE} --query-toolkit" OUTPUT_VARIABLE wxWidgets_TOOLKIT)
   IF(wxWidgets_TOOLKIT STREQUAL "base")
-    MESSAGE(FATAL_ERROR "wxWidgets is as non-GUI package configured. Check you wxWidgets installation (maybe wxgtkXX-devel is missing)")
+    SET(wxWidgets_FOUND FALSE)
+    MESSAGE("wxWidgets is as non-GUI package configured. Check you wxWidgets installation (maybe wxgtkXX-devel is missing)")
   ENDIF()
 ENDIF (UNIX)
+IF(NOT wxWidgets_FOUND)
+  MESSAGE("wxWidgets was not found, GUI programs (hugin, nona_gui) disabled")
+ENDIF(NOT wxWidgets_FOUND)
 
 ##
 ## Graphics libraries
--- a/src/hugin1/CMakeLists.txt	2020-03-03 11:10:11.620000000 +0100
+++ b/src/hugin1/CMakeLists.txt	2020-03-03 11:10:32.760000000 +0100
@@ -1,28 +1,32 @@
 
 include_directories( ${CMAKE_SOURCE_DIR}/src/hugin1 )
 
+# build gui only if wxWidgets was found
 INCLUDE(${wxWidgets_USE_FILE})
+IF(wxWidgets_FOUND)
+  INCLUDE(${wxWidgets_USE_FILE})
 
-# do we need to define _UNICODE on windows?
-IF(WIN32)
-  ADD_DEFINITIONS(-D_UNICODE -DUNICODE)
-ENDIF(WIN32)
+  # do we need to define _UNICODE on windows?
+  IF(WIN32)
+    ADD_DEFINITIONS(-D_UNICODE -DUNICODE)
+  ENDIF(WIN32)
 
-# populate correct dpi aware manifest from wxWidgets
-IF(WIN32)
-  IF(CMAKE_SIZEOF_VOID_P EQUAL 8) 
-    # 64 bit build
-    SET(WINDOWS_DPI_MANIFEST "${wxWidgets_ROOT_DIR}/include/wx/msw/amd64-dpi-aware-pmv2.manifest")
-  ELSE()
-    # 32 bit built
-    SET(WINDOWS_DPI_MANIFEST "${wxWidgets_ROOT_DIR}/include/wx/msw/wx-dpi-aware-pmv2.manifest")
+  # populate correct dpi aware manifest from wxWidgets
+  IF(WIN32)
+    IF(CMAKE_SIZEOF_VOID_P EQUAL 8) 
+      # 64 bit build
+      SET(WINDOWS_DPI_MANIFEST "${wxWidgets_ROOT_DIR}/include/wx/msw/amd64-dpi-aware-pmv2.manifest")
+    ELSE()
+      # 32 bit built
+      SET(WINDOWS_DPI_MANIFEST "${wxWidgets_ROOT_DIR}/include/wx/msw/wx-dpi-aware-pmv2.manifest")
+    ENDIF()
   ENDIF()
-ENDIF()
 
-add_subdirectory(base_wx)
-add_subdirectory(stitch_project)
-add_subdirectory(icpfind)
-add_subdirectory(executor)
-add_subdirectory(hugin)
-add_subdirectory(ptbatcher)
-add_subdirectory(calibrate_lens)
+  add_subdirectory(base_wx)
+  add_subdirectory(stitch_project)
+  add_subdirectory(icpfind)
+  add_subdirectory(executor)
+  add_subdirectory(hugin)
+  add_subdirectory(ptbatcher)
+  add_subdirectory(calibrate_lens)
+ENDIF(wxWidgets_FOUND)
